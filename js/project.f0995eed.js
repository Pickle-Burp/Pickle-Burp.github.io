(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["project"],{"07bd":function(e,n,t){"use strict";t.r(n);var s=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("section",[t("Navbar"),t("h1",{staticClass:"is-size-1 is-centered has-text-centered"},[e._v("L'historique du projet")]),t("br"),e._m(0),t("Footer")],1)},a=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("section",[t("div",{staticClass:"container"},[t("p",{staticClass:"is-centered"},[e._v(" Nous sommes un groupe de quatre étudiants en seconde année à Epita Lyon. Ainsi, nous devions, au cours de notre 4ème semestre d'études réaliser un projet afin de faire un logiciel avec une forte part d'algorithmie. Après moult discussions, nous avons donc décidé de faire un assistant vocal en C, sur Linux. A partir de cela, il nous a donc fallu constituer le cahier des charges que vous pouvez trouver dans "),t("a",{attrs:{href:"Downloads.vue"}},[e._v("la page des téléchargements.")]),t("br"),e._v(" Une fois le cahier des charges approuvé et validé, nous nous sommes lancés dans la réalisation de notre projet. Les tâches étaient assignées, il n'y avait plus qu'à faire ! Mais tout n'étant pas aussi simple, nous nous sommes très vite rendu compte que nous n'avions pas forcément les connaissances nécessaires pour faire ce que nous voulions. Ainsi, nous sommes arrivés à la première soutenance après très peu de code mais beaucoup de recherches : l'enregistrement de l'audio en était encore au stade de recherches, tout comme l'exécution des commandes et le réseau de neurones. Cependant, un réseau de neurones d'entrainement avait été constitué, il était capable d'apprendre n'importe quelle porte logique (XOR, OR, NOR, ...). En parallèle, une API non officielle de Google a été mise en place afin de permettre à l'assistant vocal de fonctionner malgré l'absence de réseau de neurones. Mais cette API étant assez ancienne et ne prenant que des formats audio très précis, elle n'est pas très pratique à utiliser. Un peu de retard avait donc été pris, de plus nous n'étions pas forcément motivés devant l'immensité de notre travail à faire. "),t("br"),t("br"),e._v(" Cependant, nous nous sommes remis au travail pour la deuxième soutenance en continuant à implémenter ce que nous avions à faire. Malheureusement nous avons tous rencontrés des problèmes techniques plus ou moins gênants : un membre n'avait plus d'ordinateur pendant plusieurs semaines, un autre n'avait plus d'environnement Linux et a eu beucoup de soucis pour en remettre un en place et un troisème a cassé son ordinateur en faisant des essais. Toutefois, notre projet était maintenant capable de lancer une application et de faire une recherche sur internet. Du côté de l'enregistrement audio, il était quasiment fini mais pas encore totalement fonctionnel. Enfin, le réseau de neurones étant plus complexe que prévu à construire en était encore au stade de recherche. UNe deuxème API, celle de Mozilla a été ajoutée afin de pouvoir comparer les résultats entre les deux API et utiliser le résultat avec le plus haut degré de certitude. De plus, une base de donnée a été trouvée afin d'entraîner correctement le réseau de neurones : la base de données du projet \"Common Voice\" de Mozilla. Mais malgré tous nos efforts, nous avions encore du retard et cela a impacté notre moral. "),t("br"),t("br"),e._v(" Nous voilà donc enfin à la troisième et dernière soutenance. Normalement, le logiciel doit être entièrement fonctionnel puisque c'est la fin du projet. Heureusement pour nous, et en dépit de tout notre retard, nous avons enfin un assistant vocal fonctionnel. Celui-ci fonctionne de façon très limitée : il faut parler avec une voix claire et dans un environnement silencieux afin que l'instruction soit clairement audible et compréhensible. De plus, Morty ne peut effectuer qu'un nombre très restreint de tâches : ouverture d'une application, rechercher sur internet, trouver un dossier ou un fichier (et donc l'ouvrir). Un correcteur orthographique de base a aussi été incorporé afin que le texte renvoyé soit écrit dans un français à minima correct. Bien que ce porjet soit fini, nous sommes heureux d'en voir le bout puisque nous avons grandement manqué de motivation au cours de celui-ci. En effet, nous nous sommes très vite aperçu que réaliser un assistant vocal est déjà une tâche complexe mais le C n'est clairement pas un langage fait pour réaliser ce genre de chose. Un langage orienté objet comme Python aurait été bien plus approprié. ")]),t("br"),t("h1",{staticClass:"title is-2"},[e._v("Librairies utilisées")]),e._v(" "),t("br"),t("p",[e._v(" Au cours de la conception de notre assistant vocal nous avons utilisé plusieurs librairies afin de nous simplifier le plus possible la tâche. Voici donc une liste des librairies utilisées : ")]),t("ul",[t("li",[t("a",{attrs:{href:"https://developer.gnome.org/gtk3/stable/"}},[e._v("gtk/gtk.h")])]),t("li",[t("a",{attrs:{href:"http://www.portaudio.com/docs/v19-doxydocs/"}},[e._v("portaudio.h")])]),t("li",[t("a",{attrs:{href:"http://www.fftw.org/"}},[e._v("fftw3.h")])]),t("li",[t("a",{attrs:{href:"http://www.libpng.org/"}},[e._v("png.h")])]),t("li",[t("a",{attrs:{href:"https://man7.org/linux/man-pages/man0/pthread.h.0p.html"}},[e._v("pthread.h")])])])])])}],r=t("d178"),i=t("fd2d"),o={name:"Project",components:{Navbar:r["a"],Footer:i["a"]}},u=o,l=(t("4fd3"),t("2877")),c=Object(l["a"])(u,s,a,!1,null,"2d892ed8",null);n["default"]=c.exports},"4fd3":function(e,n,t){"use strict";t("9cc8")},"9cc8":function(e,n,t){}}]);
//# sourceMappingURL=project.f0995eed.js.map